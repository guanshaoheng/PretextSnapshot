jobs:
  include:
  - os: linux
    dist: bionic
  - os: osx
language: c
install:
- if [ "$TRAVIS_OS_NAME" = "osx" ]; then export conda_url=https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh; fi
- if [ "$TRAVIS_OS_NAME" = "linux" ]; then export conda_url=https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh; fi
- wget $conda_url -O miniconda.sh
- bash miniconda.sh -b -p $HOME/miniconda
- source "$HOME/miniconda/etc/profile.d/conda.sh"
- hash -r
- conda config --set always_yes yes --set changeps1 no
- conda update -q conda
- conda info -a
- conda install -c conda-forge mamba
- if [ "$TRAVIS_OS_NAME" = "osx" ]; then export toolchain=clangxx_osx-64; fi
- if [ "$TRAVIS_OS_NAME" = "linux" ]; then export toolchain=gxx_linux-64; fi
- mamba create -q -n test-environment -c conda-forge -c bioconda -y meson clang $toolchain samtools
- conda activate test-environment
- if [ "$TRAVIS_OS_NAME" = "linux" ]; then env CC=clang CXX=clang meson setup --buildtype=release --unity on builddir; fi
- if [ "$TRAVIS_OS_NAME" = "osx" ]; then meson setup --buildtype=release --unity on builddir; fi
- cd builddir
- meson compile
- meson test
script:
- echo "done"
before_deploy:
- echo "Auto release generated by Travis CI on "$(date +'%Y:%m:%d at %H:%M:%S') >
  release_notes
- export release_name="PretextSnapshot-"$(git describe --tags)
- mkdir $release_name
- cp -r $TRAVIS_BUILD_DIR/*.cpp $TRAVIS_BUILD_DIR/include $TRAVIS_BUILD_DIR/meson.build $TRAVIS_BUILD_DIR/wrapper $TRAVIS_BUILD_DIR/libdeflate $TRAVIS_BUILD_DIR/mpc $TRAVIS_BUILD_DIR/LICENSE $TRAVIS_BUILD_DIR/README.md $release_name/
- tar -czf Source_with_Submodules.tar.gz $release_name
deploy:
  edge: true
  provider: releases
  token: "$GITHUB_TOKEN"
  file: 
  - release_notes
  - Source_with_Submodules.tar.gz
  name: "$release_name"
  body: Auto-generated release by Travis CI
  skip_cleanup: true
  prerelease: true
  on:
    tags: true
    condition: $TRAVIS_OS_NAME = linux
env:
  secure: dkXMRX0ouedIKK9BjzXKYjQkYtcRiaNUhTEvBfA5pzr31zSij0rSpeStIbJ/i/dkfgmxa/XsCIICOSsdC8PBK/JbsNF9PnkHdPBvbLHFpD3btrtwyyPCpW1Lu7pckRAQt3A2Tu5erhvyIaLvOmoWXFc1iceEDwm6mQ6K69iNQo09gXuU4b2lzXsrPQuFT+cye4FU3A/Pm1PIN+Dsa5BTuXF6RZvsSoi8iD7XdwhbuPDldzo3CK7Hg1mxzmA9G94awYCFiK83mnPoN4O9crrQEG1ax8v1kCwpyyOkLsdPiQk0UI4DnJXKGUIGKnQBPaq+zsxZe7u8eUP3gmkqCZC9pcQRXo/h3Gb2md861UDQ2BmDuTN6cL+ZTfg7yTCLOIaziHY5EzY+AcoydClwwzObvQgKFgUf1Izt+DGg2EJDbqhuemxfPN/vrkrS+ijN62G7Q9DIACpeNI53flV7HFoh0jtV9axZar2rsD8HMVFpQDwMX9GP8POSqC52Fm33yJT7T93ZkATvNlSuF0+/FcVySmWfbGdJdviBqyWhLgzl5IkQV4ep0i6ByxlxxUvEGXJ5zaMFU1OqHydwhJ2bvI70p3BRaxwokbW5UatHZkwyGPrOLpJkRoba7vo1qTgkoJ7KAY77SAsHJhsvjLcSMI9R6Zy9Fbldpmm+lQiB4m2D6P4=
